{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleClickSortByAlphabetically","setState","ALPHABET","handleClickSortByLength","LENGTH","handleClickReverse","handleClickReset","this","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,gCAAkC,WAChC,EAAKC,UAAS,SAACL,GACb,OAAO,2BAAKA,GAAZ,IAAmBE,SAAUL,EAASS,eAR5C,EAYEC,wBAA0B,WACxB,EAAKF,UAAS,SAACL,GACb,OAAO,2BAAKA,GAAZ,IAAmBE,SAAUL,EAASW,aAd5C,EAkBEC,mBAAqB,WACnB,EAAKJ,UAAS,SAACL,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBC,YAAaD,EAAMC,iBAnB7D,EAsBES,iBAAmB,WACjB,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAzBzB,4CA6BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EA/DH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAEE,cAAcD,GAEzB,KAAKnB,EAASW,OACZ,OAAOO,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAITjB,GACFY,EAAaM,UAGRN,EAwCSO,CAAkBtB,EAAiBa,KAAKX,OAEtD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYrB,IAAaL,EAASS,WAEpCkB,QAASb,KAAKP,gCALhB,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYrB,IAAaL,EAASW,SAEpCgB,QAASb,KAAKJ,wBALhB,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAftB,IAEduB,QAASb,KAAKF,mBALhB,sBAUEP,IAAaL,EAASM,OAAuB,IAAfF,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,iBAHhB,sBAUJ,6BACGE,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAhFpC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cafc3a69.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickSortByAlphabetically = () => {\n    this.setState((state) => {\n      return { ...state, sortType: SortType.ALPHABET };\n    });\n  };\n\n  handleClickSortByLength = () => {\n    this.setState((state) => {\n      return { ...state, sortType: SortType.LENGTH };\n    });\n  };\n\n  handleClickReverse = () => {\n    this.setState((state) => ({ ...state, isReversed: !state.isReversed }));\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.handleClickSortByAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.handleClickSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': isReversed !== true,\n            })}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed === true) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleClickReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}